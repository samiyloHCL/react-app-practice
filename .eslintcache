[{"C:\\Users\\skrys\\Documents\\reactPractice\\react-app\\src\\index.js":"1","C:\\Users\\skrys\\Documents\\reactPractice\\react-app\\src\\components\\counter.jsx":"2","C:\\Users\\skrys\\Documents\\reactPractice\\react-app\\src\\App.js":"3"},{"size":195,"mtime":1612197943875,"results":"4","hashOfConfig":"5"},{"size":745,"mtime":1611879029219,"results":"6","hashOfConfig":"5"},{"size":833,"mtime":1612198926393,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jvivrz",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\skrys\\Documents\\reactPractice\\react-app\\src\\index.js",["15"],"C:\\Users\\skrys\\Documents\\reactPractice\\react-app\\src\\components\\counter.jsx",[],["16","17"],"C:\\Users\\skrys\\Documents\\reactPractice\\react-app\\src\\App.js",["18","19","20"],{"ruleId":"21","severity":1,"message":"22","line":3,"column":8,"nodeType":"23","messageId":"24","endLine":3,"endColumn":15},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"21","severity":1,"message":"29","line":1,"column":26,"nodeType":"23","messageId":"24","endLine":1,"endColumn":34},{"ruleId":"30","severity":1,"message":"31","line":9,"column":16,"nodeType":"32","endLine":11,"endColumn":6},{"ruleId":"30","severity":1,"message":"33","line":11,"column":8,"nodeType":"34","endLine":11,"endColumn":10,"suggestions":"35"},"no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["36"],"no-negated-in-lhs",["37"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [getRecipes]",{"range":"41","text":"42"},[333,335],"[getRecipes]"]